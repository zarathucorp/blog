{
  "hash": "37ebc58c644b06f3cc32eb4e0548e591",
  "result": {
    "markdown": "---\ntitle: \"R로 논문용 그래프 그리기\"\ndescription: |\n  R 기본 함수, ggplot2 패키지, ggpubr 패키지를 활용해 의학논문에 필요한 그래프를 만들어보자.\ncategories:\n  - R\n  - Rpackage\nauthor:\n  - name: Yumin Kim \n    url: https://github.com/yumin9-kim\n    affiliation: 차라투 주식회사\n    affiliation_url: https://www.zarathu.com/\ndate: 03-25-2022\ndraft: false\n---\n\n\n\n  이번 시간에는 R을 이용해서 데이터와 통계 분석 결과를 한 눈에 전달할 수 있는 그래프를 만들 것이다. 예제 데이터로 지난 시간에 사용한 건강검진 데이터를 이용한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- read.csv(\"https://raw.githubusercontent.com/jinseob2kim/R-skku-biohrs/main/data/example_g1e.csv\")\nrmarkdown::paged_table(head(data))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"EXMD_BZ_YYYY\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"RN_INDI\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"HME_YYYYMM\"],\"name\":[3],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"Q_PHX_DX_STK\"],\"name\":[4],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"Q_PHX_DX_HTDZ\"],\"name\":[5],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"Q_PHX_DX_HTN\"],\"name\":[6],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"Q_PHX_DX_DM\"],\"name\":[7],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"Q_PHX_DX_DLD\"],\"name\":[8],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"Q_PHX_DX_PTB\"],\"name\":[9],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"Q_HBV_AG\"],\"name\":[10],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"Q_SMK_YN\"],\"name\":[11],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"Q_DRK_FRQ_V09N\"],\"name\":[12],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"HGHT\"],\"name\":[13],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"WGHT\"],\"name\":[14],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"WSTC\"],\"name\":[15],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"BMI\"],\"name\":[16],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"VA_LT\"],\"name\":[17],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"VA_RT\"],\"name\":[18],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"BP_SYS\"],\"name\":[19],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"BP_DIA\"],\"name\":[20],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"URN_PROT\"],\"name\":[21],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"HGB\"],\"name\":[22],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"FBS\"],\"name\":[23],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"TOT_CHOL\"],\"name\":[24],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"TG\"],\"name\":[25],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"HDL\"],\"name\":[26],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"LDL\"],\"name\":[27],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"CRTN\"],\"name\":[28],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"SGOT\"],\"name\":[29],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"SGPT\"],\"name\":[30],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"GGT\"],\"name\":[31],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"GFR\"],\"name\":[32],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"2009\",\"2\":\"562083\",\"3\":\"200909\",\"4\":\"0\",\"5\":\"0\",\"6\":\"1\",\"7\":\"0\",\"8\":\"0\",\"9\":\"NA\",\"10\":\"3\",\"11\":\"1\",\"12\":\"0\",\"13\":\"144\",\"14\":\"61\",\"15\":\"90\",\"16\":\"29.4\",\"17\":\"0.7\",\"18\":\"0.8\",\"19\":\"120\",\"20\":\"80\",\"21\":\"1\",\"22\":\"12.6\",\"23\":\"117\",\"24\":\"264\",\"25\":\"128\",\"26\":\"60\",\"27\":\"179\",\"28\":\"0.9\",\"29\":\"25\",\"30\":\"20\",\"31\":\"25\",\"32\":\"59\",\"_rn_\":\"1\"},{\"1\":\"2009\",\"2\":\"334536\",\"3\":\"200911\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0\",\"7\":\"0\",\"8\":\"0\",\"9\":\"NA\",\"10\":\"2\",\"11\":\"1\",\"12\":\"0\",\"13\":\"162\",\"14\":\"51\",\"15\":\"63\",\"16\":\"19.4\",\"17\":\"0.8\",\"18\":\"1.0\",\"19\":\"120\",\"20\":\"80\",\"21\":\"1\",\"22\":\"13.8\",\"23\":\"96\",\"24\":\"169\",\"25\":\"92\",\"26\":\"70\",\"27\":\"80\",\"28\":\"0.9\",\"29\":\"18\",\"30\":\"15\",\"31\":\"28\",\"32\":\"74\",\"_rn_\":\"2\"},{\"1\":\"2009\",\"2\":\"911867\",\"3\":\"200903\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0\",\"7\":\"0\",\"8\":\"0\",\"9\":\"NA\",\"10\":\"3\",\"11\":\"1\",\"12\":\"0\",\"13\":\"163\",\"14\":\"65\",\"15\":\"82\",\"16\":\"24.5\",\"17\":\"0.7\",\"18\":\"0.6\",\"19\":\"130\",\"20\":\"80\",\"21\":\"1\",\"22\":\"15.0\",\"23\":\"118\",\"24\":\"216\",\"25\":\"132\",\"26\":\"55\",\"27\":\"134\",\"28\":\"0.8\",\"29\":\"26\",\"30\":\"30\",\"31\":\"30\",\"32\":\"79\",\"_rn_\":\"3\"},{\"1\":\"2009\",\"2\":\"183321\",\"3\":\"200908\",\"4\":\"NA\",\"5\":\"NA\",\"6\":\"NA\",\"7\":\"NA\",\"8\":\"NA\",\"9\":\"NA\",\"10\":\"3\",\"11\":\"1\",\"12\":\"0\",\"13\":\"152\",\"14\":\"51\",\"15\":\"70\",\"16\":\"22.1\",\"17\":\"0.8\",\"18\":\"0.9\",\"19\":\"101\",\"20\":\"62\",\"21\":\"1\",\"22\":\"13.1\",\"23\":\"90\",\"24\":\"199\",\"25\":\"100\",\"26\":\"65\",\"27\":\"114\",\"28\":\"0.9\",\"29\":\"18\",\"30\":\"14\",\"31\":\"11\",\"32\":\"61\",\"_rn_\":\"4\"},{\"1\":\"2009\",\"2\":\"942671\",\"3\":\"200909\",\"4\":\"NA\",\"5\":\"NA\",\"6\":\"NA\",\"7\":\"NA\",\"8\":\"NA\",\"9\":\"NA\",\"10\":\"3\",\"11\":\"1\",\"12\":\"0\",\"13\":\"159\",\"14\":\"50\",\"15\":\"73\",\"16\":\"19.8\",\"17\":\"0.7\",\"18\":\"0.8\",\"19\":\"132\",\"20\":\"78\",\"21\":\"1\",\"22\":\"13.0\",\"23\":\"92\",\"24\":\"162\",\"25\":\"58\",\"26\":\"40\",\"27\":\"111\",\"28\":\"0.9\",\"29\":\"24\",\"30\":\"23\",\"31\":\"15\",\"32\":\"49\",\"_rn_\":\"5\"},{\"1\":\"2009\",\"2\":\"979358\",\"3\":\"200912\",\"4\":\"NA\",\"5\":\"NA\",\"6\":\"NA\",\"7\":\"NA\",\"8\":\"NA\",\"9\":\"NA\",\"10\":\"2\",\"11\":\"1\",\"12\":\"0\",\"13\":\"157\",\"14\":\"55\",\"15\":\"73\",\"16\":\"22.3\",\"17\":\"1.5\",\"18\":\"1.5\",\"19\":\"110\",\"20\":\"70\",\"21\":\"1\",\"22\":\"11.9\",\"23\":\"100\",\"24\":\"192\",\"25\":\"109\",\"26\":\"53\",\"27\":\"117\",\"28\":\"0.7\",\"29\":\"15\",\"30\":\"12\",\"31\":\"14\",\"32\":\"83\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n# 1. Base 함수 이용하기\n\nR에서 기본적으로 제공하는 함수만으로도 간단한 그래프를 그릴 수 있다.\n\n## Histogram\n\n연속형 데이터를 히스토그램으로 나타내보자. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(data$HGHT, main=\"Distribution of height\", xlab=\"height(cm)\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/hist-1.png){width=672}\n:::\n:::\n\n\n**breaks=n** 옵션을 이용해서 계급구간의 수를 설정하고, **freq=F** 옵션을 이용하면 y축을 빈도수가 아닌 확률밀도로 표시할 수 있다. 그래프의 색도 간단하게 설정할 수 있다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(data$HGHT, main=\"Distribution of height\", xlab=\"height(cm)\",\n     breaks = 30, freq=F, col=\"grey\", border=\"white\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/hist2-1.png){width=672}\n:::\n:::\n\n\n\n## Barplot\n\n히스토그램과 유사하지만, X축에 표현하고자 하는 변수가 **이산형 변수**일 때는 빈도수를 바 그래프로 나타낼 수 있다. **table()** 함수를 이용해 빈도표를 만들고, 바 그래프로 나타낸다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable <- table(data$Q_SMK_YN)\nprint(table)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n  1   2   3 \n995 256 391 \n```\n:::\n\n```{.r .cell-code}\nbarplot(table, main=\"Distribution of smoking\", names.arg=c(\"Never\", \"Ex-smoker\", \"Current\"), ylab=\"frequency\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/bar-1.png){width=672}\n:::\n:::\n\n\n연도에 따른 흡연 여부의 분포를 하나의 그래프로 나타낼 수 있다. **beside=T** 옵션을 사용하면 적층형 그래프가 그룹형 그래프로 바뀐다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable <- table(data$Q_SMK_YN, data$EXMD_BZ_YYYY)\nprint(table)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   \n    2009 2010 2011 2012 2013 2014 2015\n  1  125  132  140  146  141  157  154\n  2   34   42   35   36   35   38   36\n  3   53   62   48   52   67   59   50\n```\n:::\n\n```{.r .cell-code}\nbarplot(table, main=\"Distribution of smoking by year\", ylab=\"frequency\",\n        legend=c(\"Never\", \"Ex-smoker\", \"Current\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/bar2-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbarplot(table, main=\"Distribution of smoking by year\", ylab=\"frequency\",\n        legend=c(\"Never\", \"Ex-smoker\", \"Current\"), beside=T)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/bar3-1.png){width=672}\n:::\n:::\n\n\n## Boxplot\n\n범주형 변수(흡연 여부, X축)에 따른 연속형 변수(수축기 혈압, Y축)의 분포를 나타내는 데는 박스 그래프를 이용할 수 있다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nboxplot(BP_SYS ~ Q_SMK_YN, data = data, names=c(\"Never\", \"Ex-smoker\", \"Current\"), \n        main=\"SBP average by smoking\", ylab=\"SBP(mmHg)\", xlab=\"Smoking\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/box-1.png){width=672}\n:::\n:::\n\n\n## Scatter plot\n\n두 연속형 변수 간의 관계는 산점도로 한 눈에 보여줄 수 있다. **pch=n** 옵션은 점의 모양, **cex=n** 옵션은 점의 크기를 지정한다. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(HGHT ~ WGHT, data=data,\n     ylab=\"Height(cm)\", xlab=\"Weight(kg)\",\n     pch=16, cex=0.5)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/scatter-1.png){width=672}\n:::\n:::\n\n\n범주형 변수에 따른 점의 분포를 표현하고자 할 때는 **점의 색깔(col= 옵션)**로 구분해서 표현할 수 있다. 2009년과 2015년에 실시한 검사에서 수검자의 신장, 체중 분포에 차이가 있는지 확인해보자.  \n또, **legend()** 함수를 이용하면 범례에 사용될 옵션을 따로 설정할 수 있다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata2 <- data %>% filter(EXMD_BZ_YYYY %in% c(2009, 2015))\nplot(HGHT ~ WGHT, data=data2, col=factor(EXMD_BZ_YYYY),\n     ylab=\"Height(cm)\", xlab=\"Weight(kg)\",\n     pch=16, cex=0.5)\nlegend(x=\"bottomright\", legend=c(\"2009\", \"2015\"), col=1:2, pch = 19)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/scatter2-1.png){width=672}\n:::\n:::\n\n\n## Line plot\n\n**plot()** 함수에 **type=\"l\"** 옵션을 사용하면 선 그래프를 그릴 수 있다.  \n**summarize** 함수를 이용해 연도에 따른 흡연자 비율(Q_SMK_YN=3)을 계산한 뒤, 선 그래프로 표현해보자.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable <- data %>% group_by(EXMD_BZ_YYYY) %>% \n  summarize(smoker= mean(Q_SMK_YN==3, na.rm=T))\nprint(table)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 7 × 2\n  EXMD_BZ_YYYY smoker\n         <int>  <dbl>\n1         2009  0.25 \n2         2010  0.263\n3         2011  0.215\n4         2012  0.222\n5         2013  0.276\n6         2014  0.232\n7         2015  0.208\n```\n:::\n\n```{.r .cell-code}\nplot(table$EXMD_BZ_YYYY, table$smoker, type=\"l\",\n     xlab=\"Year\", ylab=\"prop of current smoker\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/line-1.png){width=672}\n:::\n:::\n\n\n\n\n# 2. ggplot2 이용하기\n\n다음으로 소개할 것은 R을 이용한 데이터 시각화에 가장 흔히 사용 되는 **ggplot2** 패키지이다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"ggplot2\")\nlibrary(ggplot2)\n```\n:::\n\n\n## Scatter plot\n\n앞에서 만들었던 산점도를 ggplot2를 이용해 다시 만들어보며 ggplot의 기본 문법을 이해해 보자.  \n\nggplot 문법의 첫번째 요소는 시각화할 데이터, x축과 y축 변수, 기하학적 object의 모양, 색, 크기를 지정하고 변수의 스케일을 결정하는 **aesthetic mapping**이다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=data2, aes(x=HGHT, y=WGHT, col=factor(EXMD_BZ_YYYY)))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/ggplot-1.png){width=672}\n:::\n:::\n\n\n위 코드를 통해 기본적인 그래프의 배경이 그려진다. 여기에 **+** 연산자를 이용해 기하학적 object를 추가한다. **+** 연산자는 magrittr에서의 **%>%**와 같이 ggplot2 함수들을 연결해주는 역할을 한다. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=data2, aes(x=HGHT, y=WGHT, col=factor(EXMD_BZ_YYYY))) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/geom-1.png){width=672}\n:::\n:::\n\n\n**ggtitle()**, **xlab()**, **ylab()** 함수를 이용해 각각 그래프 제목, X축 라벨과 Y축 라벨을 추가할 수 있다. **scale_color_manual()** 함수를 이용하면 범례에 사용될 옵션들을 지정할 수 있다. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=data2, aes(x=HGHT, y=WGHT, col=factor(EXMD_BZ_YYYY))) +\n  geom_point() +\n  ggtitle(\"Height and weight in year 2009 and 2015\") + xlab(\"Height(cm)\") + ylab(\"Weight(cm)\") +\n  scale_color_manual(\n      values = c(\"orange\", \"skyblue\"),\n      labels = c(\"Year 2009\", \"Year 2015\"),\n      name = \"Exam year\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/geom2-1.png){width=672}\n:::\n:::\n\n\nggplot 문법의 장점은 **+** 연산자를 이용해서 기존 그래프 위에 새로운 요소를 추가해서 덧씌우는 것이 용이하다는 점이다.  \n위의 산점도에 **geom_smooth()** 함수를 추가하면 그래프 위에 추세선을 덧씌울 수 있다. 이때,  **aes(col=)** 옵션을 ggplot() 함수에서 제외하고 geom_point() 함수 내로 이동시키면, aes(col=) 옵션은 geom_point object에만 영향을 미치고 geom_smooth object는 영향을 받지 않게 된다. 마찬가지로 각 object 함수 내에 지정된 **alpha(투명도)**, **size**, **color** 옵션은 해당 object에만 영향을 미친다. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=data2, aes(x=HGHT, y=WGHT)) +\n  geom_point(aes(col=factor(EXMD_BZ_YYYY)), alpha=0.5) +\n  ggtitle(\"Height and weight in year 2009 and 2015\") + xlab(\"Height(cm)\") + ylab(\"Weight(cm)\") +\n  scale_color_manual(\n      values = c(\"orange\", \"skyblue\"),\n      labels = c(\"Year 2009\", \"Year 2015\"),\n      name = \"Exam year\") +\n  geom_smooth(color=\"brown\", size=0.8)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using method = 'loess' and formula 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/geom3-1.png){width=672}\n:::\n:::\n\n\n## Boxplot\n\nggplot의 문법을 이해하고 나면 이를 응용해서 다양한 그래프를 그릴 수 있다.  \n앞서 만들었던 흡연 여부에 따른 수축기 혈압의 분포 그래프를 다시 만들어 보자.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata2 <- data %>% filter(!is.na(Q_SMK_YN))\nggplot(data=data2, aes(x=factor(Q_SMK_YN), y=BP_SYS)) +\n  geom_boxplot() +\n  ggtitle(\"SBP average by smoking\") + ylab(\"SBP(mmHg)\") + xlab(\"Smoking\") +\n  scale_x_discrete(labels=c(\"Never\", \"Ex-smoker\", \"Current\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/geom_boxplot-1.png){width=672}\n:::\n:::\n\n\n여기에 하나의 변수를 더 추가해서, **facet**으로 구분된 그래프를 만들 수 있다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata2 <- data2 %>% filter(!is.na(Q_PHX_DX_HTN))\nggplot(data=data2, aes(x=factor(Q_SMK_YN), y=BP_SYS)) +\n  geom_boxplot() +\n  ggtitle(\"SBP average by smoking\") + ylab(\"SBP(mmHg)\") + xlab(\"Smoking\") +\n  scale_x_discrete(labels=c(\"Never\", \"Ex-smoker\", \"Current\")) +\n  facet_wrap(~Q_PHX_DX_HTN, labeller=label_both)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/geom_boxplot2-1.png){width=672}\n:::\n:::\n\n\n**facet_grid**를 이용해 2X2 grid 형태로 그래프를 그릴 수 있다. 고혈압 과거력 변수에 더해, 당뇨 과거력 변수에 따라서도 구분해서 그래프가 나타난다. **labeller** 함수를 사용해 facet의 label도 원하는 대로 설정할 수 있다. \n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata2 <- data2 %>% filter(!is.na(Q_PHX_DX_DM))\n\nHTN.labs <- c(\"No HTN\", \"HTN\")\nnames(HTN.labs) <- c(\"0\", \"1\")\nDM.labs <- c(\"No DM\", \"DM\")\nnames(DM.labs) <- c(\"0\", \"1\")\n\nggplot(data=data2, aes(x=factor(Q_SMK_YN), y=BP_SYS)) +\n  geom_boxplot() +\n  ggtitle(\"SBP average by smoking\") + ylab(\"SBP(mmHg)\") + xlab(\"Smoking\") +\n  scale_x_discrete(labels=c(\"Never\", \"Ex-smoker\", \"Current\")) +\n  facet_grid(Q_PHX_DX_DM~Q_PHX_DX_HTN,\n             labeller = labeller(Q_PHX_DX_HTN = HTN.labs, Q_PHX_DX_DM = DM.labs))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/geom_boxplot3-1.png){width=672}\n:::\n:::\n\n\n## Barplot\n\n앞서 만들었던 바 그래프도 ggplot 패키지를 이용하면 table 변환 과정 없이 바로 그릴 수 있다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=data2, aes(x=factor(Q_SMK_YN))) +\n  geom_bar(fill=\"grey\", color=\"black\") +\n  ggtitle(\"Distribution of smoking\") + xlab(\"Smoking\") +\n  scale_x_discrete(labels=c(\"Never\", \"Ex-smoker\", \"Current\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/geom_bar-1.png){width=672}\n:::\n:::\n\n\n연도에 따른 흡연 여부의 분포도 table 변환 과정 없이 그릴 수 있다. geom_bar()의 **position='fill'** 옵션을 설정하면 100% 누적 비율 바 그래프가 그려진다. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=data2, aes(x=EXMD_BZ_YYYY, fill=factor(Q_SMK_YN))) +\n  geom_bar(position=\"fill\", color=\"grey\") +\n  ggtitle(\"Distribution of smoking by year\") + xlab(\"Year\") + ylab(\"proportion\") +\n  scale_fill_manual(\n      values = c(\"orange\", \"skyblue\", \"navy\"),\n      labels = c(\"Never\", \"Ex-smoker\", \"Current\"),\n      name = \"Smoking\") +\n  scale_x_continuous(breaks=2009:2015)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/geom_bar2-1.png){width=672}\n:::\n:::\n\n\n누적 비율이 아닌 count를 나타내고 싶다면 geom_bar()의 옵션을 **position='stack'**으로 변경한다. 적층형 그래프가 아닌 그룹형 그래프로 나타내고 싶다면 **position='dodge'**로 변경한다.  \n\n그래프의 X축과 Y축 위치를 뒤집고 싶을 때는 **coord_flip()** 함수를 이용한다. X축과 Y축의 위치가 서로 바뀌는데, 축의 scale과 label을 다시 설정하지 않아도 되기 때문에 편리하다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=data2, aes(x=EXMD_BZ_YYYY, fill=factor(Q_SMK_YN))) +\n  geom_bar(position=\"dodge\", color=\"grey\") +\n  ggtitle(\"Distribution of smoking by year\") + xlab(\"Year\") + ylab(\"count\") +\n  scale_fill_manual(\n      values = c(\"orange\", \"skyblue\", \"navy\"),\n      labels = c(\"Never\", \"Ex-smoker\", \"Current\"),\n      name = \"Smoking\") +\n  scale_x_continuous(breaks=2009:2015) +\n  coord_flip()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/geom_bar3-1.png){width=672}\n:::\n:::\n\n\n\n\n# 3. ggpubr 이용하기\n\n**ggpubr** 패키지는 ggplot2의 문법을 활용해 논문 작성을 위한 데이터 시각화에 최적화된 기능을 제공하는 패키지이다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"ggpubr\")\nlibrary(ggpubr)\n```\n:::\n\n\nggpubr 패키지를 이용하면 그래프 위에 자동으로 p-value나 통계적 유의성을 표시할 수 있고, 여러 종류의 그래프를 한 페이지로 보여주도록 배열할 수 있다.  \n\n## Histogram\n\nggpubr 패키지의 기본 문법을 활용해서 히스토그램을 그려보자. 고혈압 병력이 있는 군과 없는 군 간에 체중 분포에 차이가 있을지 확인해본다. \n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata3 <- data2 %>% mutate(HTN = as.factor(ifelse(Q_PHX_DX_HTN==1, \"Yes\", \"No\")))\np <- gghistogram(data=data3, x=\"WGHT\",\n                     color=\"HTN\", fill = \"HTN\", add=\"mean\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Using `bins = 30` by default. Pick better value with the argument\n`bins`.\n```\n:::\n\n```{.r .cell-code}\nplot1 <- ggpar(p,\n               main=\"Weight distrubution by HTN history\",\n               xlab=\"Weight(kg)\",\n               legend.title=\"HTN Dx history\")\nprint(plot1)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/gghist-1.png){width=672}\n:::\n:::\n\n\n## Boxplot\n\n같은 분포를 박스 그래프로도 나타낼 수 있다. 여기에 **stat_compare_means()** 함수를 활용하면, 고혈압 병력군 간 체중 평균에 통계적으로 유의한 차이가 있는지 확인할 수 있다. \n\n\n::: {.cell}\n\n```{.r .cell-code}\np <- ggboxplot(data=data3, x=\"HTN\", y=\"WGHT\", color=\"HTN\") +\n        stat_compare_means(method = \"t.test\", label.x.npc = \"middle\")\n\nplot2 <- ggpar(p,\n               main=\"Weight distrubution by HTN history\",\n               ylab=\"Weight(kg)\",\n               xlab=\"HTN Dx history\",\n               legend=\"none\")\n\nprint(plot2)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/ggbox-1.png){width=672}\n:::\n:::\n\n\n세 개 이상의 범주로 나누어졌을 때도 마찬가지로 통계적 유의성을 검정할 수 있다. **scale_x_discrete()** 함수의 사용에서 확인할 수 있듯이, ggpubr 패키지는 ggplot의 문법을 기반으로 하고 있다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_comparisons <- list(c(\"1\", \"2\"), c(\"2\", \"3\"), c(\"1\", \"3\"))\np <- ggboxplot(data=data3, x=\"Q_SMK_YN\", y=\"WGHT\", color=\"Q_SMK_YN\") +\n        stat_compare_means(comparisons = my_comparisons) +\n        stat_compare_means(label.y = 150) +\n        scale_x_discrete(labels=c(\"Never\", \"Ex-smoker\", \"Current\"))\n\nplot3 <- ggpar(p,\n               main=\"Weight distrubution by smoking\",\n               ylab=\"Weight(kg)\",\n               xlab=\"Smoking\",\n               legend=\"none\")\n\nprint(plot3)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/ggbox2-1.png){width=672}\n:::\n:::\n\n\n\n## Scatter plot\n\n위에서 여러번 만들었던 신장과 체중의 산점도를 다시 그려보자. **add = \"reg.line\"** 옵션을 이용해 그래프 위에 추세선을 그린 뒤, **stat_cor()** 함수로 두 변수 간의 상관계수와 p value를 구할 수 있다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\np <- ggscatter(data=data3, x=\"HGHT\", y=\"WGHT\", \n               add = \"reg.line\", conf.int = TRUE,\n               add.params = list(color = \"navy\", fill = \"lightgray\")) +\n        stat_cor(method = \"pearson\")\n\nplot4 <- ggpar(p,\n               ylab=\"Weight(kg)\",\n               xlab=\"Height(cm)\")\n\nprint(plot4)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/ggscatter-1.png){width=672}\n:::\n:::\n\n\n같은 산점도를 고혈압 병력에 따른 두 그룹으로 나누어서 다른 색으로 표현하고, 상관계수와 p-value를 따로 계산할 수도 있다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\np <- ggscatter(data=data3, x=\"HGHT\", y=\"WGHT\", color=\"HTN\", alpha=0.5,\n               add = \"reg.line\", conf.int = TRUE) +\n        stat_cor(aes(color = HTN))\n\nplot5 <- ggpar(p,\n               ylab=\"Weight(kg)\",\n               xlab=\"Height(cm)\")\n\nprint(plot5)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/ggscatter2-1.png){width=672}\n:::\n:::\n\n\n**ggarange** 함수를 사용하면 여러 개의 그래프를 한 페이지에 배열해서 보여줄 수 있다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggarrange(plot2, plot3,\n          labels = c(\"A\", \"B\"),\n          ncol = 2, nrow = 1)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/ggarrange-1.png){width=672}\n:::\n:::\n\n\n\n\n# 4. 그래프 저장하기\n\n이렇게 만들어진 그래프는 그림 파일 또는 PPT 파일로 저장해서 편집, 공유할 수 있다. \n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(c(\"rvg\", \"officer\"))\nlibrary(rvg); library(officer)\n```\n:::\n\n\n**rvg** 패키지는 그래프를 편집 가능한 그림 형태로 만들어주고, **officer** 패키지는 그림을 microsoft PPT 파일로 저장하는 기능을 제공한다.  \n\n아래 코드를 이용해 plot_file이라는 이름의 pptx 파일을 생성하고, 순서대로 슬라이드를 추가하고, 제작한 그래프를 **dml(ggobj =)** 함수를 이용해 편집 가능한 그림 형태로 슬라이드에 삽입하고, plot_file.pptx 파일로 로컬 드라이브에 저장하는 일련의 과정을 실행해 보자. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_file <- read_pptx() %>%\n  add_slide() %>% ph_with(dml(ggobj = plot1), location=ph_location_type(type=\"body\")) %>%\n  add_slide() %>% ph_with(dml(ggobj = plot4), location=ph_location_type(type=\"body\")) %>%\n  add_slide() %>% ph_with(dml(ggobj = plot5), location=ph_location_type(type=\"body\"))\n\nprint(plot_file, target = \"plot_file.pptx\")\n```\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}