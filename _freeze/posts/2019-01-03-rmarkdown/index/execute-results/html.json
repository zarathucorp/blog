{
  "hash": "16d0f35c6ab621814d2553f09812685d",
  "result": {
    "markdown": "---\ntitle: \"R Markdown 기초\"\ndescription: |\n   YAML Header, 마크다운(Markdown) 텍스트, R 코드 청크(chunk) 그리고 그림과 테이블을 중심으로, R 코드와 분석 결과가 포함된 문서를 작성하는 방법을 정리하였습니다.   \nimage: https://reproducible-analysis-workshop.readthedocs.io/en/latest/_images/Rmd_output.png\ncategories:\n  - lecture\n  - markdown\nauthor:\n  - name: Jinseob Kim\n    url: https://github.com/jinseob2kim\n    affiliation: Zarathu Co.,Ltd\n    affiliation_url: https://www.zarathu.com\ndate: 01-28-2019\ndraft: false\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\n[김진섭](https://github.com/jinseob2kim) 대표는 1월 28일(월) [성균관의대 사회의학교실](http://biomed.skku.edu/hkcheong)를 방문, **[R Markdown](https://rmarkdown.rstudio.com/)**으로 **[R](https://www.r-project.org/)** 코드와 분석 결과가 포함된 문서를 작성하는 방법을 강의할 예정입니다. 강의 내용을 미리 공유합니다. \n\n\n## 시작하기 전에 \n\n**[R Markdown](https://rmarkdown.rstudio.com/)**은 **[R](https://www.r-project.org/)** 코드와 분석을 포함한 컨텐츠를 만드는 툴이며 크게 3가지 활용법이 있다. \n\n1. 문서(`pdf`, `html`, `docx`): 글쓰기, 분석 결과, 참고문헌 등 논문의 모든 작업을 **[R Markdown](https://rmarkdown.rstudio.com/)**으로 수행한다. \n\n\n2. 프리젠테이션(`pdf`, `html`, `pptx`): **[R](https://www.r-project.org/)** 코드나 분석결과가 포함된 프리젠테이션을 만든다. [기본 템플릿](https://rmarkdown.rstudio.com/lesson-11.html)^[https://rmarkdown.rstudio.com/lesson-11.html] 외에  **[xaringan](https://github.com/yihui/xaringan)**^[https://github.com/yihui/xaringan] 패키지가 최근 인기를 끌고 있다.\n\n\n3. 웹(`html`): 웹사이트나 블로그를 만든다. **[blogdown](https://github.com/rstudio/blogdown)**^[https://github.com/rstudio/blogdown] 이나 **[distill](https://rstudio.github.io/distill/)**^[https://rstudio.github.io/distill/] 패키지가 대표적이다. 이 글의 블로그도 **[distill](https://rstudio.github.io/distill/)**로 만들었으며, 과거 차라투 홈페이지는 **[blogdown](https://github.com/rstudio/blogdown)**을 이용하였다.\n\n\n\n본 강의는 1의 가장 기초에 해당하는 강의로 간단한 문서를 작성하는 것을 목표로 한다. `pdf` 문서를 만들기 위해서는 추가로 **[LaTeX](https://www.latex-project.org/)** 문서작성 프로그램인 **[Tex Live](http://www.ktug.org/xe/?mid=Install)**를 설치해야 하며 본 강의에서는 생략한다.  \n\n\n## Rmd 문서 시작하기\n\n**[R Markdown](https://rmarkdown.rstudio.com/)**은 **Rmd** 파일로 작성되며 **[rmarkdown](https://github.com/rstudio/rmarkdown)**^[https://github.com/rstudio/rmarkdown] 패키지를 설치한 후, **[Rstudio](https://www.rstudio.com/)**에서 **File $\\rightarrow$ New File $\\rightarrow$ R markdown...** 의 순서로 클릭하여 시작할 수 있다(Figure \\@ref(fig:rmdfilemenu), \\@ref(fig:rmdstart)). \n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![Rstudio `File` 메뉴^[https://rachaellappan.github.io/rmarkdown/]](https://rachaellappan.github.io/images/rmarkdown.png){fig-align='center'}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![R markdown 시작 메뉴^[https://rachaellappan.github.io/rmarkdown/]](https://rachaellappan.github.io/images/rmarkdown2.png){fig-align='center'}\n:::\n:::\n\n\n문서의 제목과 저자 이름을 적은 후 파일 형태를 아무거나 고르면(나중에도 쉽게 수정 가능) Figure \\@ref(fig:rmdfile)처럼 확장자가 `Rmd`인 문서가 생성될 것이다. \n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![R markdown 기본 문서^[https://aberdeenstudygroup.github.io/studyGroup/lessons/SG-T5-RMarkdown/Images/New_Markdown_v2.png]](https://aberdeenstudygroup.github.io/studyGroup/lessons/SG-T5-RMarkdown/Images/New_Markdown_v2.png){fig-align='center'}\n:::\n:::\n\n\n파일 내용을 보면 맨 먼저 제목을 쓰는 부분이 있고 글과 코드를 작성하는 부분도 있다. 일단 이 파일을 문서로 만들어보자. 문서 이름이 있는 바로 아래의 **knit** 탭을 누르거나, 그 옆의 아래방향 화살표를 누르고 원하는 파일 형태를 클릭하면 된다(Figure \\@ref(fig:knittab)). 처음에 언급했듯이 `pdf`는 **[Tex Live](http://www.ktug.org/xe/?mid=Install)**를 설치한 후 이용할 수 있다. \n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![knit 탭^[https://rstudioblog.files.wordpress.com/2014/06/r-markdown-formats.png]](https://rstudioblog.files.wordpress.com/2014/06/r-markdown-formats.png){fig-align='center'}\n:::\n:::\n\n\n다음은 각각 `html`, `pdf`, `docx`로 생성된 문서이다.\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![html 문서^[https://stackoverflow.com/questions/47317229/rmarkdown-knit-pdf-to-look-exactly-like-html]](https://i.stack.imgur.com/uTuZu.png){fig-align='center'}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![pdf 문서^[https://stackoverflow.com/questions/47317229/rmarkdown-knit-pdf-to-look-exactly-like-html]](https://i.stack.imgur.com/Cyzfl.png){fig-align='center'}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![word 문서^[https://rmarkdown.rstudio.com/articles_docx.html]](https://d33wubrfki0l68.cloudfront.net/9badad80dad0ed2859221733eb47b4674552a229/380fd/articles/images/first-word-view-02.png){fig-align='center'}\n:::\n:::\n\n\n\n생각보다 간단하지 않은가? 이제 본격적으로 `Rmd` 파일의 내용을 살펴보면서 어떻게 글과 **[R](https://www.r-project.org/)** 코드를 작성하는지 알아보자. `Rmd`는 크게 제목을 적는 **YAML Header**, 글을 쓰는 **Markdown Text**와 코드를 적는 **Code Chunk**로 나눌 수 있다(Figure \\@ref(fig:rmdcontents)). \n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![Rmd 파일 구성^[https://rfriend.tistory.com/311]](https://t1.daumcdn.net/cfile/tistory/231E974C59085A9E3D){fig-align='center'}\n:::\n:::\n\n\n\n## YAML Header\n\n`YAML`은 **Y**AML **A**in’t **M**arkup **L**anguage의 재귀형식의 이름을 갖고 있는 언어로 가독성에 초점을 두고 개발되었다. **[R Markdown](https://rmarkdown.rstudio.com/)**은 `Rmd`의 시작 부분에 문서 형식을 설정하는 용도로 이 포맷을 이용한다. 다음은 기초 정보만 포함된 `YAML`이다. \n\n\n```yaml\n---\ntitle: \"R Markdown 기초\"\nauthor: \"김진섭\"\ndate: \"2022-08-23\"\noutput: html_document\n---\n```\n\n\nKnit 버튼 오른쪽의 **설정(<i class=\"fa fa-cog\"></i>) $\\rightarrow$ Output Options...**를 클릭하여 `html`, `pdf`, `word` 포맷 각각에 대한 기본 설정을 할 수 있다(Figure \\@ref(fig:outputoption), \\@ref(fig:outputhtml)). \n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![Output Options^[https://richardlent.github.io/post/rstudio-as-a-research-and-writing-platform/]](https://richardlent.github.io/img/options1.png){fig-align='center' width=500}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![HTML Option^[https://stackoverflow.com/questions/24934781/rstudio-knitr-themes]](https://i.stack.imgur.com/d8mpo.png){fig-align='center' width=500}\n:::\n:::\n\n\n설정을 마치면 업데이트 된 `YAML`을 볼 수 있다. 모든 포맷 공통인 설정값은 \n\n1. **`toc`**(yes or no): 목차 포함 여부\n\n2. 그림의 **높이(`fig_height`)** 와 **넓이(`fig_width`)**: **[R](https://www.r-project.org/)** 코드로 만든 그림에는 해당되지 않는다. **[Figures]** 에서 다시 설명하겠다.\n\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n이며, 자동으로 현재 날짜를 입력하려면 아래와 같이 `` `r format(Sys.Date())` ``를 이용하면 된다. \n\n```yaml\n---\ntitle: \"R Markdown 기초\"\nsubtitle: \"성균관의대 강의 2019\"\nauthor: \"김진섭\"\ndate: \"`r format(Sys.Date())`\" \n---\n```\n\n아래는 필자가 `Rmd` 문서를 만들 때 흔히 쓰는 `YAML` 설정이다.   \n\n```yaml\n---\ntitle: \"R Markdown 기초\"\nsubtitle: \"성균관의대 강의 2019\"\nauthor: \"김진섭\"\ndate: \"`r format(Sys.Date())`\"\noutput:\n  html_document:\n    fig_height: 6\n    fig_width: 10\n    highlight: textmate\n    theme: cosmo\n    toc: yes\n    toc_depth: 3\n    toc_float: yes\n  pdf_document:\n    fig_height: 6\n    fig_width: 10\n    toc: no\n  word_document:\n    fig_height: 6\n    fig_width: 9\n    toc: no\n---\n```\n\n`html`은 **[`theme`](http://www.datadreaming.org/post/r-markdown-theme-gallery/)**^[http://www.datadreaming.org/post/r-markdown-theme-gallery/]에서 테마, **[`highlight`](https://eranraviv.com/syntax-highlighting-style-in-rmarkdown/)^[https://eranraviv.com/syntax-highlighting-style-in-rmarkdown/]**에서 글씨 강조 스타일을 설정할 수 있으며, `toc_float` 옵션으로 움직이는 목차를 만들 수 있다(\\@ref(fig:tocfloat)). \n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![toc_float- 움직이는 목차^[https://rfriend.tistory.com/311]](https://t1.daumcdn.net/cfile/tistory/232EC13E590866C21E){fig-align='center' width=500}\n:::\n:::\n\n\n`docx`는 미리 설정을 마친 `docx` 문서를 아래와 같이 `YAML`에 추가하여 템플릿으로 이용할 수 있다. \n\n```yaml\n---\ntitle: \"R Markdown 기초\"\nauthor: \"김진섭\"\ndate: \"2022-08-23\"\noutput: \n    word_document:\n      reference_docx: mystyles.docx\n---\n```\n\n`docx`에 대한 자세한 내용은 [Rstudio 블로그](https://rmarkdown.rstudio.com/articles_docx.html)^[https://rmarkdown.rstudio.com/articles_docx.html]를 참고하기 바란다. \n\n\n## Markdown 글쓰기\n\n\n\n**[R Markdown](https://rmarkdown.rstudio.com/)**은 이름에서 알 수 있듯이 **[마크다운(Markdown)](https://gist.github.com/ihoneymon/652be052a0727ad59601)** 을 기반으로 만들어졌다. **[마크다운](https://gist.github.com/ihoneymon/652be052a0727ad59601)**은 문법이 매우 간단한 것이 특징으로 **[깃허브](https://github.com)**의 **`README.md`**가 대표적인 마크다운 문서이다. 아래의 [R markdown reference]^[https://www.rstudio.com/wp-content/uploads/2015/03/rmarkdown-reference.pdf]에 흔히 쓰는 문법이 정리되어 있다. \n\n\n<embed src=\"https://drive.google.com/viewerng/\nviewer?embedded=true&url=https://www.rstudio.com/wp-content/uploads/2015/03/rmarkdown-reference.pdf\" width=\"100%\" height=\"600\">\n\n\n2 가지만 따로 살펴보겠다. \n\n### Inline R code\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n문장 안에 분석 결과값을 적을 때, 분석이 바뀔 때마다 바뀐 숫자를 직접 수정해야 한다. 그러나 숫자 대신 `` `r <코드>` `` 꼴로 **[R](https://www.r-project.org/)** 코드를 넣는다면 재분석시 그 숫자를 자동으로 업데이트 시킬 수 있다.   \n\n```rmd\nThere were  `r nrow(cars)` cars studied\n```\n\n> There were 50 cars studied\n\n\n\n### 수식 \n\n**[LaTeX](https://www.latex-project.org/)** 문법을 사용하며 `hwp` 문서의 수식 편집과 비슷하다. inline 삽입은 `$...$`, 새로운 줄은 `$$...$$` 안에 식을 적으면 된다.   \n\n```rmd\nThis summation expression $\\sum_{i=1}^n X_i$ appears inline.\n```\n\n> This summation expression $\\sum_{i=1}^n X_i$ appears inline.\n\n\n    $$\n    \\sigma = \\sqrt{ \\frac{1}{N} \\sum_{i=1}^N (x_i -\\mu)^2}\n    $$\n    \n\n$$\\sigma = \\sqrt{ \\frac{1}{N} \\sum_{i=1}^N (x_i -\\mu)^2}$$\n\n\n\n수식 전반은 [LaTeX math and equations\n](https://www.latex-tutorial.com/tutorials/amsmath/)^[https://www.latex-tutorial.com/tutorials/amsmath/]을 참고하기 바란다. \n\n\n\n## R chunk\n\n**Rmd** 문서에서 **[R](https://www.r-project.org/)** 코드가 들어가는 방식은 4가지이다.\n\n1. 몰래 실행. 코드와 결과는 다 숨긴다 - 최초 설정 때 쓰임.\n\n2. 실행. 코드와 결과를 모두 보여준다. \n\n3. 실행. 코드는 숨기고 결과만 보여준다. \n\n4. 실행하지 않음. 코드 보여주기만 한다. \n\n\n하나씩 살펴보도록 하자. \n\n\n### 최초 설정\n\n문서를 처음 생성했을 때 최초로 보이는 **[R](https://www.r-project.org/)** 코드는 다음과 같다. \n\n````rmd\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n```\n````\n\n `include=FALSE` 옵션으로 문서에는 포함시키지 않고 몰래 실행할 수 있으며, 주로 최초 설정에 이용된다. `setup`은 이 코드에 해당하는 라벨로 생략 가능하다. `knitr::opts_chunk$set` 에서 디폴트 옵션을 설정할 수 있으며 `echo = TRUE`는 코드를 보여준다는 뜻이다. 흔히 쓰는 옵션들은 아래와 같다.\n \n* `eval=F` - 코드를 실행하지 않는다. \n* `echo=F` - 코드를 보여주지 않는다.\n* `include=F` - 실행 결과를 보여주지 않는다.\n* `message=F` - 실행 때 나오는 메세지를 보여주지 않는다.\n* `warning=F` - 실행 때 나오는 경고를 보여주지 않는다.\n* `error=T` - 에러가 있어도 실행하고 에러코드를 보여준다.\n* `fig.height = 7` - 그림 높이, **[R](https://www.r-project.org/)**로 그린 그림에만 해당한다.\n* `fig.width = 7` - 그림 너비, **[R](https://www.r-project.org/)**로 그린 그림에만 해당한다.\n* `fig.align = 'center'` - 그림 위치, **[R](https://www.r-project.org/)**로 그린 그림에만 해당한다.\n\n\n다음은 필자가 논문을 Rmd로 쓸 때 흔히 쓰는 디폴트 옵션이다.\n\n````rmd\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo=F, fig.align = \"center\", message=F, warning=F, fig.height = 8, cache=T, dpi = 300, dev = \"jpg\")\n```\n````\n\n전체 옵션은 `knitr::opts_chunk$get` 함수로 확인할 수 있다. \n\n```rmd\nknitr::opts_chunk$get()\n```\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output .cell-output-stdout}\n```\n$eval\n[1] TRUE\n\n$echo\n[1] FALSE\n\n$results\n[1] \"markup\"\n\n$tidy\n[1] FALSE\n\n$tidy.opts\nNULL\n\n$collapse\n[1] FALSE\n\n$prompt\n[1] FALSE\n\n$comment\n[1] NA\n\n$highlight\n[1] TRUE\n\n$size\n[1] \"normalsize\"\n\n$background\n[1] \"#F7F7F7\"\n\n$strip.white\n[1] TRUE\n\n$cache\n[1] FALSE\n\n$cache.path\n[1] \"index_cache/html/\"\n\n$cache.vars\nNULL\n\n$cache.lazy\n[1] TRUE\n\n$dependson\nNULL\n\n$autodep\n[1] FALSE\n\n$cache.rebuild\n[1] FALSE\n\n$fig.keep\n[1] \"high\"\n\n$fig.show\n[1] \"asis\"\n\n$fig.align\n[1] \"center\"\n\n$fig.path\n[1] \"index_files/figure-html/\"\n\n$dev\n[1] \"png\"\n\n$dev.args\nNULL\n\n$dpi\n[1] 96\n\n$fig.ext\nNULL\n\n$fig.width\n[1] 7\n\n$fig.height\n[1] 5\n\n$fig.env\n[1] \"figure\"\n\n$fig.cap\nNULL\n\n$fig.scap\nNULL\n\n$fig.lp\n[1] \"fig:\"\n\n$fig.subcap\nNULL\n\n$fig.pos\n[1] \"\"\n\n$out.width\nNULL\n\n$out.height\nNULL\n\n$out.extra\nNULL\n\n$fig.retina\n[1] 2\n\n$external\n[1] TRUE\n\n$sanitize\n[1] FALSE\n\n$interval\n[1] 1\n\n$aniopts\n[1] \"controls,loop\"\n\n$warning\n[1] TRUE\n\n$error\n[1] FALSE\n\n$message\n[1] TRUE\n\n$render\nNULL\n\n$ref.label\nNULL\n\n$child\nNULL\n\n$engine\n[1] \"R\"\n\n$split\n[1] FALSE\n\n$include\n[1] TRUE\n\n$purl\n[1] TRUE\n\n$fenced.echo\n[1] FALSE\n\n$ft.shadow\n[1] FALSE\n```\n:::\n:::\n\n\n\n### Chunk 별 설정\n\n최초 설정 이후부터는 아래와 같이 간단하게 코드를 보여주거나 실행할 수 있다. \n\n\n````rmd\n```{r}\nhead(mtcars)\n```\n````\n\n```rmd\nhead(mtcars)\n```\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"mpg\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"cyl\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"disp\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"hp\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"drat\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"wt\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"qsec\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"vs\"],\"name\":[8],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"am\"],\"name\":[9],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"gear\"],\"name\":[10],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"carb\"],\"name\":[11],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"21.0\",\"2\":\"6\",\"3\":\"160\",\"4\":\"110\",\"5\":\"3.90\",\"6\":\"2.620\",\"7\":\"16.46\",\"8\":\"0\",\"9\":\"1\",\"10\":\"4\",\"11\":\"4\",\"_rn_\":\"Mazda RX4\"},{\"1\":\"21.0\",\"2\":\"6\",\"3\":\"160\",\"4\":\"110\",\"5\":\"3.90\",\"6\":\"2.875\",\"7\":\"17.02\",\"8\":\"0\",\"9\":\"1\",\"10\":\"4\",\"11\":\"4\",\"_rn_\":\"Mazda RX4 Wag\"},{\"1\":\"22.8\",\"2\":\"4\",\"3\":\"108\",\"4\":\"93\",\"5\":\"3.85\",\"6\":\"2.320\",\"7\":\"18.61\",\"8\":\"1\",\"9\":\"1\",\"10\":\"4\",\"11\":\"1\",\"_rn_\":\"Datsun 710\"},{\"1\":\"21.4\",\"2\":\"6\",\"3\":\"258\",\"4\":\"110\",\"5\":\"3.08\",\"6\":\"3.215\",\"7\":\"19.44\",\"8\":\"1\",\"9\":\"0\",\"10\":\"3\",\"11\":\"1\",\"_rn_\":\"Hornet 4 Drive\"},{\"1\":\"18.7\",\"2\":\"8\",\"3\":\"360\",\"4\":\"175\",\"5\":\"3.15\",\"6\":\"3.440\",\"7\":\"17.02\",\"8\":\"0\",\"9\":\"0\",\"10\":\"3\",\"11\":\"2\",\"_rn_\":\"Hornet Sportabout\"},{\"1\":\"18.1\",\"2\":\"6\",\"3\":\"225\",\"4\":\"105\",\"5\":\"2.76\",\"6\":\"3.460\",\"7\":\"20.22\",\"8\":\"1\",\"9\":\"0\",\"10\":\"3\",\"11\":\"1\",\"_rn_\":\"Valiant\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n기본 설정과 다른 옵션을 적용하려면 chunk에 옵션을 따로 적으면 된다. 예를 들어 코드는 숨기고 결과만 보여주려면 `echo=F` 를 추가하면 된다. \n\n````rmd\n```{r, echo=F}\nhead(mtcars)\n```\n````\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"mpg\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"cyl\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"disp\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"hp\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"drat\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"wt\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"qsec\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"vs\"],\"name\":[8],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"am\"],\"name\":[9],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"gear\"],\"name\":[10],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"carb\"],\"name\":[11],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"21.0\",\"2\":\"6\",\"3\":\"160\",\"4\":\"110\",\"5\":\"3.90\",\"6\":\"2.620\",\"7\":\"16.46\",\"8\":\"0\",\"9\":\"1\",\"10\":\"4\",\"11\":\"4\",\"_rn_\":\"Mazda RX4\"},{\"1\":\"21.0\",\"2\":\"6\",\"3\":\"160\",\"4\":\"110\",\"5\":\"3.90\",\"6\":\"2.875\",\"7\":\"17.02\",\"8\":\"0\",\"9\":\"1\",\"10\":\"4\",\"11\":\"4\",\"_rn_\":\"Mazda RX4 Wag\"},{\"1\":\"22.8\",\"2\":\"4\",\"3\":\"108\",\"4\":\"93\",\"5\":\"3.85\",\"6\":\"2.320\",\"7\":\"18.61\",\"8\":\"1\",\"9\":\"1\",\"10\":\"4\",\"11\":\"1\",\"_rn_\":\"Datsun 710\"},{\"1\":\"21.4\",\"2\":\"6\",\"3\":\"258\",\"4\":\"110\",\"5\":\"3.08\",\"6\":\"3.215\",\"7\":\"19.44\",\"8\":\"1\",\"9\":\"0\",\"10\":\"3\",\"11\":\"1\",\"_rn_\":\"Hornet 4 Drive\"},{\"1\":\"18.7\",\"2\":\"8\",\"3\":\"360\",\"4\":\"175\",\"5\":\"3.15\",\"6\":\"3.440\",\"7\":\"17.02\",\"8\":\"0\",\"9\":\"0\",\"10\":\"3\",\"11\":\"2\",\"_rn_\":\"Hornet Sportabout\"},{\"1\":\"18.1\",\"2\":\"6\",\"3\":\"225\",\"4\":\"105\",\"5\":\"2.76\",\"6\":\"3.460\",\"7\":\"20.22\",\"8\":\"1\",\"9\":\"0\",\"10\":\"3\",\"11\":\"1\",\"_rn_\":\"Valiant\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n반대로 실행은 안하고 코드만 보여주려면 `eval=F`를 추가하면 된다. \n\n\n````rmd\n```{r, eval=F}\nhead(mtcars)\n```\n````\n\n```rmd\nhead(mtcars)\n```\n\n\n## Figures\n\nRmd 문서에 그림이 들어가는 방법은 2가지가 있다. \n\n1. **[R](https://www.r-project.org/)** 코드로 생성 : `plot` 함수, `ggplot2` 패키지 등\n\n\n2. 외부 그림 삽입\n\n앞서도 언급했듯이 주의할 점은 그림이 만들어지는 방법에 따라 **서로 다른 옵션**이 적용된다는 것이다. 일단 전자부터 살펴보자. \n\n\n### Figures with **[R](https://www.r-project.org/)**  \n\n**[R](https://www.r-project.org/)** 코드에서 자체적으로 만든 그림은 전부 chunk 옵션의 지배를 받아 간단하다. \n\n\n````rmd\n```{r, fig.cap = \"scatterplot: cars\", fig.width = 8, fig.height = 6}\nplot(cars, pch = 18)\n```\n````\n\n```rmd\nplot(cars, pch = 18)\n```\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![scatterplot - cars](index_files/figure-html/unnamed-chunk-6-1.png){fig-align='center' width=768}\n:::\n:::\n\n\n\n### External figures\n\n외부 그림은 **[R](https://www.r-project.org/)** 코드로도 삽입할 수 있고 **[마크다운](https://gist.github.com/ihoneymon/652be052a0727ad59601)** 문법을 쓸 수도 있는데, **어떤 방법을 쓰느냐에 따라 다른 옵션을 적용**받는다는 것을 주의해야 한다. **[R](https://www.r-project.org/)**에서는 `knitr::include_graphics` 함수를 이용하여 그림을 넣을 수 있고 이 때는 chunk 내부의 옵션이 적용된다. \n\n\n````rmd\n```{r, fig.cap = \"tidyverse logo\", fig.align = \"center\"}\nlibrary(knitr)\ninclude_graphics(\"https://www.tidyverse.org/images/tidyverse-default.png\")\n```\n````\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![tidyverse logo](https://www.tidyverse.org/images/tidyverse-default.png){fig-align='center'}\n:::\n:::\n\n\n\n같은 그림을 chunk없이 바로 **[마크다운](https://gist.github.com/ihoneymon/652be052a0727ad59601)**에서 삽입할 수도 있다. 이 때는 `YAML`의 옵션이 적용된다. \n\n\n```md\n![tidyverse logo](https://www.tidyverse.org/images/tidyverse-default.png){ width=50% }\n```\n\n![tidyverse logo](https://www.tidyverse.org/images/tidyverse-default.png){ width=50% }\n\n\n`{ width=50% }` 는 그림의 크기를 조절하는 옵션이며 **[R](https://www.r-project.org/)** chunk에서도 같은 옵션 `out.width=\"50%\"`이 있다.   위치를 가운데로 조절하려면 `<center>...</center>` 를 포함시키자.\n\n```md\n<center>\n![tidyverse logo](https://www.tidyverse.org/images/tidyverse-default.png){ width=50% }\n</center>\n```\n\n\n<center>\n![tidyverse logo](https://www.tidyverse.org/images/tidyverse-default.png){ width=50% }\n</center>\n\n\n개인적으로는 외부 이미지도 chunk 내부에서 읽는 것을 추천한다. chunk 내부의 옵션들이 **[마크다운](https://gist.github.com/ihoneymon/652be052a0727ad59601)**의 그것보다 훨씬 체계적이고 쉬운 느낌이다.   \n\n\n## Tables\n\n논문을 쓸 때 가장 귀찮은 부분 중 하나가 분석 결과를 테이블로 만드는 것으로, `knitr::kable()` 함수를 쓰면 문서 형태에 상관없이 Rmd에서 바로 테이블을 만들 수 있다. 아래는 데이터를 살펴보는 가장 간단한 예시이다.\n\n\n````rmd\n```{r}\nkable(iris[1:5, ], caption = \"A caption\")\n```\n````\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\nTable: A caption\n\n|   | Sepal.Length| Sepal.Width| Petal.Length| Petal.Width|Species |\n|:--|------------:|-----------:|------------:|-----------:|:-------|\n|1  |          5.1|         3.5|          1.4|         0.2|setosa  |\n|2  |          4.9|         3.0|          1.4|         0.2|setosa  |\n|3  |          4.7|         3.2|          1.3|         0.2|setosa  |\n|4  |          4.6|         3.1|          1.5|         0.2|setosa  |\n|5  |          5.0|         3.6|          1.4|         0.2|setosa  |\n:::\n:::\n\n\n**epiDisplay** 패키지의 `regress.display`, `logistic.display` 함수를 활용하면 회귀분석의 결과를 바로 테이블로 나타낼 수 있다(Table \\@ref(tab:regtable)). \n\n````rmd\n```{r}\nmtcars$vs <- as.factor(mtcars$vs)\nmtcars$cyl <- as.factor(mtcars$cyl)\n\nmodel <- glm(mpg ~ disp + vs + cyl, data = mtcars)\nmodel.display <- epiDisplay::regress.display(model, crude = T, crude.p.value = T)\nmodel.table <- model.display$table[rownames(model.display$table)!=\"\", ]\nkable(model.table, caption = model.display$first.line)\n```\n````\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\nTable: Linear regression predicting mpg\n\n\n|                  |crude coeff.(95%CI)   |crude P value |adj. coeff.(95%CI)  |P(t-test) |P(F-test) |\n|:-----------------|:---------------------|:-------------|:-------------------|:---------|:---------|\n|disp (cont. var.) |-0.04 (-0.05,-0.03)   |< 0.001       |-0.03 (-0.05,0)     |0.019     |< 0.001   |\n|vs: 1 vs 0        |7.94 (4.6,11.28)      |< 0.001       |0.04 (-3.81,3.89)   |0.984     |0.334     |\n|cyl: ref.=4       |                      |              |                    |          |0.041     |\n|6                 |-6.92 (-10.11,-3.73)  |< 0.001       |-4.77 (-8.56,-0.98) |0.016     |          |\n|8                 |-11.56 (-14.22,-8.91) |< 0.001       |-4.75 (-12.19,2.7)  |0.202     |          |\n:::\n:::\n\n\n테이블을 좀 더 다듬으려면 **[kableExtra](https://github.com/haozhu233/kableExtra)** 패키지가 필요하며, 자세한 내용은 **[cran 설명서](https://cran.r-project.org/web/packages/kableExtra/vignettes/awesome_table_in_html.html)**^[https://cran.r-project.org/web/packages/kableExtra/vignettes/awesome_table_in_html.html]를 참고하기 바란다. `html` 문서의 경우 `kable()`외에도 다양한 함수들을 이용할 수 있는데, 대표적인 것이 `rmarkdown::paged_table()` 함수와 **[DT](https://github.com/rstudio/DT)** 패키지이다. 전자는 아래와 같이 `YAML`에서 테이블 보기의 기본 옵션으로 설정할 수도 있다.   \n\n\n````yaml\n---\ntitle: \"Motor Trend Car Road Tests\"\noutput:\n  html_document:\n    df_print: paged\n---\n````\n\n**[DT](https://github.com/rstudio/DT)** 패키지에 대한 설명은 [Rstudio DT 홈페이지](https://rstudio.github.io/DT/)^[https://rstudio.github.io/DT/]를 참고하기 바란다.\n\n\n## 마치며\n\n본 강의를 통해 **[R Markdown](https://rmarkdown.rstudio.com/)**으로 기본적인 문서를 만드는 법을 알아보았다. 본 강의에서는 시간 관계상 참고문헌 다는 법을 언급하지 않았는데 궁금하다면 [Bibliographies and Citations](https://rmarkdown.rstudio.com/authoring_bibliographies_and_citations.html)^[https://rmarkdown.rstudio.com/authoring_bibliographies_and_citations.html]을 참고하자. 이 내용까지 숙지한다면 **[R Markdown](https://rmarkdown.rstudio.com/)**으로 논문을 쓸 준비가 된 것이다. **[R Markdown](https://rmarkdown.rstudio.com/)**에 대한 전반적인 내용은 아래의 [R Markdown Cheet Sheet](https://github.com/rstudio/cheatsheets/raw/master/rmarkdown-2.0.pdf)^[https://github.com/rstudio/cheatsheets/raw/master/rmarkdown-2.0.pdf]에 잘 요약되어 있으니 그때그떄 확인하면 좋다.\n\n<embed src=\"https://drive.google.com/viewerng/\nviewer?embedded=true&url=https://github.com/rstudio/cheatsheets/raw/master/rmarkdown-2.0.pdf\" width=\"100%\" height=\"600\">\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/font-awesome-5.1.0/css/all.css\" rel=\"stylesheet\" />\n<link href=\"../../site_libs/font-awesome-5.1.0/css/v4-shims.css\" rel=\"stylesheet\" />\n<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}